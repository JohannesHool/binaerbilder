(this.webpackJsonpbinaerbilder=this.webpackJsonpbinaerbilder||[]).push([[0],{11:function(e,t,n){e.exports=n(12)},12:function(e,t,n){"use strict";n.r(t);var i=n(5),a=n(6),r=n(10),l=n(9),s=n(0),h=n.n(s),u=n(1),o=n.n(u),d=n(8),c=(n(17),[{value:1,label:"Schwarz/Weiss (1 Bit)"},{value:2,label:"Graustufen (2 Bit)"},{value:8,label:"Graustufen (8 Bit)"},{value:"rgbDec",label:"RGB24 (Dezimalzahlen)"},{value:9,label:"RGB9 (9 Bit)"},{value:24,label:"RGB24 (24 Bit)"},{value:"runLengthDec",label:"Laufl\xe4ngencodierung mit Dezimalzahlen"},{value:"runLengthBin4",label:"Laufl\xe4ngencodierung mit Bin\xe4rzahlen (4 Bit)"},{value:"runLengthBin8",label:"Laufl\xe4ngencodierung mit Bin\xe4rzahlen (8 Bit)"}]),g=function(e){Object(r.a)(n,e);var t=Object(l.a)(n);function n(e){var a;return Object(i.a)(this,n),(a=t.call(this,e)).imageChangeHandler=function(e){a.state.dimension>0&&0!==a.state.bitdepth&&(a.setState({imageString:e.target.value}),a.setState({warnings:[]}))},a.dimensionChange=function(e){var t=e.target.value;isNaN(t)&&(t=0),t>40&&(t=40),a.setState({dimension:t}),a.setState({warnings:[]})},a.bitdepthChangeHandler=function(e){a.setState({bitdepth:e.value})},a.state={imageString:"",dimension:0,warnings:[],bitdepth:0,placeholderCol:"red"},a}return Object(a.a)(n,[{key:"rgb",value:function(e,t,n){return"rgb("+e+","+t+","+n+")"}},{key:"getWarning",value:function(){return this.state.dimension<=0?"Lege zuerst die Dimension des Bildes fest":this.state.bitdepth<=0?"Lege zuerst die Bittiefe des Bildes fest":""}},{key:"testBinaryStr",value:function(e){for(var t=0;t<e.length;t++)if("0"!==e[t]&&"1"!==e[t])return!1;return!0}},{key:"renderBinaryPixel",value:function(e,t){var n=this.state.bitdepth.valueOf();"rgbDec"===n&&(n=24),isNaN(n)&&(n=1);var i,a="",r=String(parseInt(480/this.state.dimension))+"px",l=1*String(480/this.state.dimension)+"px",s=255/(Math.pow(2,n)-1);if(!e||e.length<n||!this.testBinaryStr(e))a="?",i=this.rgb(255,255,255);else if(n>8){var u=this.splitNChars(e,n/3);s=255/(Math.pow(2,n/3)-1),i=this.rgb(parseInt(u[0],2)*s,parseInt(u[1],2)*s,parseInt(u[2],2)*s)}else i=this.rgb(parseInt(e,2)*s,parseInt(e,2)*s,parseInt(e,2)*s);return h.a.createElement("div",{className:"pixel",key:"pixel_"+t,style:{backgroundColor:i,height:r,width:r,fontSize:l}},h.a.createElement("span",{style:{verticalAlign:"middle"}},a))}},{key:"renderBinaryRow",value:function(e,t){for(var n=[],i=0;i<e.length;i++)n.push(this.renderBinaryPixel(e[i],i));return h.a.createElement("div",{className:"image-row",key:"row"+t},n)}},{key:"splitNChars",value:function(e,t){for(var n=[],i=0;i<e.length;i+=t)n.push(e.substr(i,t));return n}},{key:"explain0",value:function(){switch(this.state.bitdepth){case 0:return"";case 1:return"Die Bitsequenz soll eine Abfolge von einstelligen Bin\xe4rzahlen sein. 0 wird als Schwarz und 1 als Weiss interpretiert. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case 2:return"Die Bitsequenz soll eine Abfolge von zweistelligen Bin\xe4rzahlen sein. 00 wird als Schwarz und 11 als Weiss interpretiert. Die Zahlen dazwischen stellen Graustufen dar. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case 8:return"Die Bitsequenz soll eine Abfolge von achtstelligen Bin\xe4rzahlen sein. 00000000 wird als Schwarz und 11111111 als Weiss interpretiert. Die Zahlen dazwischen stellen Graustufen dar. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case"rgbDec":return"Es wird eine Sequenz von kommagetrennten RGB-Codes erwartet. Die RGB-Codes enthalten drei durch Leerzeichen getrennte Dezimalzahlen";case 9:return"Die Bitsequenz soll eine Abfolge von neunstelligen Bin\xe4rzahlen sein. Die ersten drei Stellen bestimmen die Rotintensit\xe4t, die zweiten drei Stellen die Gr\xfcnintensit\xe4t und die letzten drei Stellen die Blauintensit\xe4t. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case 24:return"Die Bitsequenz soll eine Abfolge von vierundzwanzigstelligen Bin\xe4rzahlen sein. Die ersten acht Stellen bestimmen die Rotintensit\xe4t, die zweiten acht Stellen die Gr\xfcnintensit\xe4t und die letzten acht Stellen die Blauintensit\xe4t. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case"runLengthDec":return"Es wird eine Sequenz von kommagetrennten Dezimalzahlen erwartet. Die Zahlen beschreiben die Laufl\xe4ngencodierung eines Schwarz/Weiss-Bildes, wobei mit Weiss begonnen wird. Leerzeichen werden ignoriert und Zeilenumbr\xfcche als Kommas interpretiert.";case"runLengthBin4":return"Es wird eine Sequenz von vierstelligen Bin\xe4rzahlen erwartet. Die Zahlen beschreiben die Laufl\xe4ngencodierung eines Schwarz/Weiss-Bildes, wobei mit Weiss begonnen wird. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert.";case"runLengthBin8":return"Es wird eine Sequenz von achtstelligen Bin\xe4rzahlen erwartet. Die Zahlen beschreiben die Laufl\xe4ngencodierung eines Schwarz/Weiss-Bildes, wobei mit Weiss begonnen wird. Zeilenumbr\xfcche, Leerzeichen und Kommas werden ignoriert."}}},{key:"explain",value:function(){return isNaN(this.state.bitdepth)?"-":this.state.bitdepth<=8?"Pixel * Bittiefe = "+Math.pow(this.state.dimension,2)+" * "+this.state.bitdepth+" = "+Math.pow(this.state.dimension,2)*this.state.bitdepth+" Bits":"Pixel * (3 * Bittiefe) = "+Math.pow(this.state.dimension,2)+" * (3 * "+this.state.bitdepth/3+") = "+Math.pow(this.state.dimension,2)*(3*this.state.bitdepth/3)+" Bits"}},{key:"explain2",value:function(){return"runLengthDec"===this.state.bitdepth|"rgbDec"===this.state.bitdepth?"-":this.state.imageString.replace(/(\r\n|\n|\r)/gm,"").split(" ").join("").split(",").join("").length}},{key:"renderBinaryImage",value:function(){var e=this.state.bitdepth.valueOf(),t=this.state.imageString,n=0,i=[];if(isNaN(e))if("runLengthDec"===e){e=1;for(var a=t.valueOf().replace(/(\r\n|\n|\r)/gm,",").split(" ").join("").split(","),r=[],l=0;l<a.length;l++){var s=parseInt(a[l]);if(s>1600&&(s=1600),!isNaN(s))if(l%2===0)for(var u=0;u<s;u++)r.push(1);else for(var o=0;o<s;o++)r.push(0)}t=r.join("")}else if("runLengthBin4"===e|"runLengthBin8"===e){var d;e=1,d="runLengthBin4"===this.state.bitdepth?4:8;for(var c=t.valueOf().replace(/(\r\n|\n|\r)/gm,",").split(" ").join("").split(",").join(""),g=this.splitNChars(c,d),m=[],p=0;p<g.length;p++){var b=parseInt(g[p],2);if(!isNaN(b)&g[p].length===d)if(p%2===0)for(var v=0;v<b;v++)m.push(1);else for(var f=0;f<b;f++)m.push(0)}t=m.join("")}else{e=24;for(var B=t.valueOf().replace(/(\r\n|\n|\r)/gm,",").split(","),z=[],w=0;w<B.length;w++){var E=[],S=B[w].trim().split(" ");if(3!==S.length)E=["????????","????????","????????"];else for(var x=0;x<S.length;x++){var y=parseInt(S[x]);if(!isNaN(y)&y>=0&y<=255){for(var L=y.toString(2);L.length<8;)L="0"+L;E.push(L)}else E.push("????????")}z.push(E.join(""))}t=z.join("")}else t=t.replace(/(\r\n|\n|\r)/gm,"").split(" ").join("").split(",").join("");for(var D=this.splitNChars(t,e),N=0;N<this.state.dimension;N++){for(var k=[],C=0;C<this.state.dimension;C++){var j=D[n];k.push(j),n+=1}i.push(k)}for(var W=[],Z=0;Z<i.length;Z++)W.push(this.renderBinaryRow(i[Z],Z));return h.a.createElement("div",null,W)}},{key:"render",value:function(){var e=Math.pow(this.state.dimension,2);return h.a.createElement("div",null,h.a.createElement("div",null,h.a.createElement("div",{className:"area"},h.a.createElement("div",null,h.a.createElement("h1",null,"Bin\xe4rbilder")),h.a.createElement("div",{style:{display:"table"}},h.a.createElement("div",{className:"area"},h.a.createElement("h2",null,"Dimension des Bildes"),h.a.createElement("p",{className:"input-description"}," Anzahl Pixel pro Zeile/Spalte (max = ",40,"): "),h.a.createElement("input",{type:"text",className:"small-text-input",onChange:this.dimensionChange}),h.a.createElement("p",null,"Total Anzahl Pixel: ",e),h.a.createElement("h2",null,"Codierung"),h.a.createElement(d.a,{onChange:this.bitdepthChangeHandler,options:c}),h.a.createElement("div",{style:{maxWidth:"600px"}},h.a.createElement("p",null,h.a.createElement("i",null,this.explain0()))),h.a.createElement("h2",null,"Bitsequenz"),h.a.createElement("textarea",{type:"text",style:{width:"600px",height:"100px",fontColor:"red"},onChange:this.imageChangeHandler,placeholder:this.getWarning()}),h.a.createElement("p",null,h.a.createElement("b",null,"N\xf6tige L\xe4nge der Bitsequenz")),h.a.createElement("p",null,this.explain()),h.a.createElement("p",null,h.a.createElement("b",null,"Aktuelle L\xe4nge der Bitsequenz")),h.a.createElement("p",null," ",this.explain2())),h.a.createElement("div",{className:"area"},h.a.createElement("h2",null,"Resultierendes Bin\xe4rbild"),h.a.createElement("div",{style:{backgroundColor:"white",display:"block",minHeight:"480px",maxHeight:"480px",minWidth:"480px",maxWidth:"480px"}},this.renderBinaryImage()))))))}}]),n}(h.a.Component);o.a.render(h.a.createElement(g,null),document.getElementById("root"))},17:function(e,t,n){}},[[11,1,2]]]);
//# sourceMappingURL=main.31406609.chunk.js.map